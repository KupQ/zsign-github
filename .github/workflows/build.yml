name: Compile zsign

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache OpenSSL
      uses: actions/cache@v2
      with:
        path: |
          *.deb
        key: ${{ runner.os }}-openssl-${{ hashFiles('*.deb') }}
        restore-keys: |
          ${{ runner.os }}-openssl-

    - name: Download and Install the latest OpenSSL
      run: |
        # Fetch the page and extract the version numbers
        wget -qO- http://security.ubuntu.com/ubuntu/pool/main/o/openssl/ | grep -oP 'openssl_1\.1\.1f-1ubuntu2\.\K\d+(?=_amd64\.deb)' > versions.txt
    
        # Sort the versions and get the latest
        VERSION=$(sort -V versions.txt | tail -n 1)
    
        # Clean up the temporary file
        rm versions.txt
    
        # Ensure that a version number was found
        if [ -z "$VERSION" ]; then
          echo "Failed to find the latest OpenSSL version."
          exit 1
        fi
    
        # Check if cached .deb files exist, if not download them
        if [ ! -f "openssl_1.1.1f-1ubuntu2.$VERSION_amd64.deb" ]; then
            wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl/openssl_1.1.1f-1ubuntu2.$VERSION_amd64.deb"
        fi
        if [ ! -f "libssl-dev_1.1.1f-1ubuntu2.$VERSION_amd64.deb" ]; then
            wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl-dev_1.1.1f-1ubuntu2.$VERSION_amd64.deb"
        fi
        if [ ! -f "libssl1.1_1.1.1f-1ubuntu2.$VERSION_amd64.deb" ]; then
            wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.$VERSION_amd64.deb"
        fi
        sudo dpkg -i openssl_1.1.1f-1ubuntu2.$VERSION_amd64.deb libssl-dev_1.1.1f-1ubuntu2.$VERSION_amd64.deb libssl1.1_1.1.1f-1ubuntu2.$VERSION_amd64.deb
    

    - name: Compile zsign
      run: |
        g++ *.cpp common/*.cpp -std=gnu++11 -lcrypto -O3 -o zsign
